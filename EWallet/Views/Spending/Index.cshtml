@using Newtonsoft.Json;
@using EWallet.Common.Enums;

@model EWallet.BusinessLogic.Implementation.Spendings.ViewModel.DisplaySpendingViewModel 


@{
    ViewData["Title"] = "Spendings";
    ViewData["Class"] = "Spendings-Page";
}

<div class="text-center">
    <div class="pagesHeaderSpendings">
    <h1 class="display-4">Spendings</h1>

    <div class="headerButtons">
        <!--Create spending button-->
        <div class="form-group">
                <button type="button" id="addSpendingButton" class="btn btn-primary btn-lg" data-toggle="modal" data-target=".createOrEditSpending"
                    onclick="createOrEditSpending(getRecurrenceTypes(), getSpendingCategories() )">
                Add new spending
            </button>
        </div>



        <!--Create spending category button-->
        <div class="form-group">
            <button type="button" id="addSpendingCategoryButton" class="btn btn-primary btn-lg" data-toggle="modal" data-target=".createSpendingCategory"
                    onclick="createSpendingCategory()">
                Add new spending category
            </button>
        </div>

        </div>


    </div>
    <div class="spendings-content">



        <!--Create spending modal-->
        <div class="modal fade createOrEditSpending" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog modal-lg modal-dialog-centered">
                <div class="modal-content">
                    <div class="row">
                        <div class="col-md-6" id="createOrEditSpendingDiv">
                            
                        </div>
                    </div>
                </div>
            </div>
        </div>



        <!--Create spending category modal-->
        <div class="modal fade createSpendingCategory" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="row">
                        <div class="col-md-12" id="createSpendingCategoryDiv">
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="spendingsContainer" onscroll="loadContent(getRecurrenceTypes(), getSpendingCategories())">
            @{
                var index=0;
             }
            @foreach (var item in Model.SpendingViewModels)
            {
                index++;
                <div class="spendingContainer">
                <div class="spendingInfo">
                    <div class="spendingDescription"><span>@item.SpendingDescription</span> </div>
                    <div class="spendingAmount"><span class="spendingAmountSpan">-@item.Amount$</span></div>
                </div>
                <div class="spendingDetails">
                        <div> <span>Category: @item.SpendingCategoryName</span>   </div>
                        @if (item.RecurrenceTypeId==null)
                        {
                            <div> <span>Recurrence: One Time</span> </div>
                        }
                        else
                        {
                            <div> <span>Recurrence: @item.RecurrenceTypeName</span> </div>
                        }
                    </div>


                    <div class="spendingButtons">
                        <div class="deleteButtonDiv">
                            <button type="button" data-toggle="modal" data-target=".deleteSpending"
                                    class="btn btn-primary deleteButton" onclick="getSpendingDataToDelete(@item.Id)">
                               
                                <i class="bi bi-trash"></i>
                            </button>

                        </div>




                        <div class="editButtonDiv">
                           

                                <button type="button" data-toggle="modal" data-target=".createOrEditSpending"
                                        class="btn btn-primary editButton" id=`edit@(index)`
                                        onclick="createOrEditSpending(getRecurrenceTypes(), getSpendingCategories(), @item.Id)">
                                
                                <i class="bi bi-pencil-fill"></i>
                                </button>

                        </div>
                    </div>
            </div>  
                

            }
        </div>
        @*</table>*@
    </div>




    <!--Delete spending button -->
    <div class="modal fade deleteSpending" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm delete</h5>
                </div>

                <div class="modal-body" >
                    <h5>Are you sure you want to delete this spending?</h5>
                </div>

                <form asp-action="Delete" asp-controller="Spending" id="deleteForm">
               
                </form>


            </div>
        </div>
    </div>


</div>


<div id="spendingSidebar">
   @* <div id="incomeHistoryContainer">
        <div id="latestIncomesText">Latest incomes </div>
    </div>
*@
    <div id="upcomingSpendings">
        <span id="upcomingSpendingsText">Upcoming spendings </span>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }


    <script src="~/js/createOrEditSpending.js" defer asp-append-version="true"></script>
    <script src="~/js/deleteSpending.js" defer asp-append-version="true"></script>
    <script src="~/js/createSpendingCategory.js" defer asp-append-version="true"></script>
    <script src="~/js/spendingsInfiniteScroll.js" defer asp-append-version="true"></script>
    <script src="~/js/upcomingSpendings.js" defer asp-append-version="true"></script>



    
    <script>
        function getSpendingCategories() {
             return @Html.Raw(JsonConvert.SerializeObject(Model.SpendingCategories));
         }
    </script>

    <script>
        function getRecurrenceTypes() {
            return @Html.Raw(JsonConvert.SerializeObject(Model.RecurrenceTypes));
        }
    </script>

}


